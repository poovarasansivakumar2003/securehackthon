{{> header}}

<style>
    .social-main {
        max-width: 600px;
        margin: 100px auto 100px auto;
        background: #23272a;
        border-radius: 16px;
        box-shadow: 0 6px 24px rgba(0, 0, 0, 0.25);
        padding: 2.5rem 2rem 2rem 2rem;
    }

    .game-container {
        background: #222;
        border-radius: 14px;
        box-shadow: 0 2px 8px rgba(0, 255, 157, 0.05);
        border: 1.5px solid #00ff9d;
        padding: 2rem 1.5rem;
    }

    .attack-selection button,
    .response-buttons button,
    #results-screen button {
        background-color: #00ff9d;
        color: #181818;
        border: none;
        padding: 12px 28px;
        margin: 10px 8px;
        font-size: 1.1rem;
        font-weight: 600;
        border-radius: 8px;
        cursor: pointer;
        transition: background 0.2s, transform 0.2s;
        box-shadow: 0 2px 8px rgba(0, 255, 157, 0.08);
    }

    .attack-selection button:hover,
    .response-buttons button:hover,
    #results-screen button:hover {
        background-color: #00e58c;
        color: #181818;
        transform: translateY(-2px) scale(1.04);
    }

    .message-box {
        background: #181818;
        border-radius: 10px;
        border: 1.5px solid #00ff9d;
        padding: 1rem;
        margin-bottom: 1rem;
        color: #00ff9d;
        font-size: 1rem;
        box-shadow: 0 2px 8px rgba(0, 255, 157, 0.05);
    }

    .sms-message {
        font-size: 1.1rem;
        margin-bottom: 0.5rem;
    }

    .audio-player {
        width: 100%;
        margin-top: 1rem;
    }

    .correct {
        color: #00ff9d;
        font-weight: bold;
        margin-top: 0.5rem;
    }

    .incorrect {
        color: #ff4444;
        font-weight: bold;
        margin-top: 0.5rem;
    }

    .scoreboard {
        background: #181818;
        border-radius: 8px;
        border: 1.5px solid #00ff9d;
        padding: 1rem;
        color: #00ff9d;
        font-size: 1.1rem;
        margin-bottom: 1rem;
        box-shadow: 0 2px 8px rgba(0, 255, 157, 0.05);
    }

    #results-screen {
        background: #222;
        border-radius: 10px;
        padding: 2rem 1rem;
        color: #fff;
        box-shadow: 0 2px 8px rgba(0, 255, 157, 0.05);
    }

    #results-screen h2 {
        color: #00ff9d;
        font-size: 1.5rem;
        margin-bottom: 1rem;
    }

    @media (max-width: 700px) {
        .social-main {
            max-width: 98vw;
            padding: 1rem;
        }

        .game-container {
            padding: 1rem;
        }
    }
</style>

<main class="min-h-screen mt-0">
    <div class="social-main">
        <div class="game-container bg-[#2a2a2a] p-6 rounded-xl shadow-lg border border-green-400">
            <h1 class="text-3xl font-bold text-green-400 text-center mb-6 pb-2 drop-shadow">Social Engineering Challenge
            </h1>

            <!-- Initial Screen -->
            <div id="initial-screen">
                <p class="text-center mb-4">Test your ability to detect social engineering attacks!</p>
                <div class="attack-selection flex justify-center gap-6 mb-6">
                    <button onclick="selectMode('sms')"
                        class="px-6 py-3 border-2 border-green-400 rounded-lg bg-[#1a1a1a] text-green-400 font-bold uppercase tracking-wider hover:bg-green-400 hover:text-black transition-all">SMS
                        Attacks</button>
                    <button onclick="selectMode('audio')"
                        class="px-6 py-3 border-2 border-green-400 rounded-lg bg-[#1a1a1a] text-green-400 font-bold uppercase tracking-wider hover:bg-green-400 hover:text-black transition-all">Audio
                        Attacks</button>
                </div>
            </div>

            <!-- Game Elements -->
            <div id="game-elements" class="hidden">
                <div id="message-box"
                    class="message-box bg-green-950 p-6 rounded-lg border border-green-400 mb-4 shadow-inner"></div>
                <div class="response-buttons flex justify-center gap-4 mb-4">
                    <button onclick="checkAnswer('malicious')"
                        class="px-6 py-3 border-2 border-green-400 rounded-lg bg-[#1a1a1a] text-green-400 font-bold uppercase tracking-wider hover:bg-green-400 hover:text-black transition-all">Malicious</button>
                    <button onclick="checkAnswer('legitimate')"
                        class="px-6 py-3 border-2 border-green-400 rounded-lg bg-[#1a1a1a] text-green-400 font-bold uppercase tracking-wider hover:bg-green-400 hover:text-black transition-all">Legitimate</button>
                </div>
                <div
                    class="scoreboard text-center text-lg font-bold bg-green-950 border border-green-400 rounded-lg py-3 mb-4 shadow">
                    <div>Score: <span id="score">0</span></div>
                    <div>Timer: <span id="timer">30</span>s</div>
                </div>
            </div>

            <!-- Results Screen -->
            <div id="results-screen" class="hidden">
                <h2
                    class="text-2xl font-bold text-green-400 text-center mb-4 border-b-2 border-green-400 pb-2 drop-shadow">
                    Game Over!</h2>
                <div id="final-score" class="mb-4"></div>
                <button onclick="restartGame()"
                    class="px-6 py-3 border-2 border-green-400 rounded-lg bg-black text-green-400 font-bold uppercase tracking-wider hover:bg-green-400 hover:text-black transition-all">Play
                    Again</button>
            </div>
        </div>
    </div>
</main>

<script>
    // Game state
    let currentMode = '';
    let score = 0;
    let timer = 30;
    let currentScenario = null;
    let timerInterval;
    let gameStartTime = null;
    let questionsAnswered = 0;
    let correctAnswers = 0;

    // Scenarios database
    const smsScenarios = [
        {
            message: "URGENT: Your bank account has been compromised. Click here to verify your identity: http://secure-bank-verify.com",
            type: "malicious",
            explanation: "Phishing attempt using urgency and suspicious link"
        },
        {
            message: "Your package delivery #4589 is pending. Pay $2.99 customs fee: http://delivery-express-pay.net",
            type: "malicious",
            explanation: "Scam using package delivery as bait"
        },
        {
            message: "Hi, this is your bank. Your scheduled payment of $450 to Electric Company was processed on 10/24/2024.",
            type: "legitimate",
            explanation: "Regular bank notification with specific details"
        },
        {
            message: "FINAL NOTICE: Your account will be suspended. Verify now: bit.ly/acc-verify",
            type: "malicious",
            explanation: "Pressure tactics with shortened suspicious link"
        },
        {
            message: "Your appointment with Dr. Smith is confirmed for tomorrow at 2:30 PM. Reply Y to confirm or N to cancel.",
            type: "legitimate",
            explanation: "Standard appointment reminder with clear options"
        }
    ];

    const audioScenarios = [
        {
            title: "Tech Support Scam",
            audio: "/api/placeholder/audio/1",
            type: "malicious",
            transcript: "This is Microsoft Tech Support. We've detected a virus on your computer. Provide remote access immediately to prevent data loss.",
            explanation: "Impersonating Microsoft and creating urgency"
        },
        {
            title: "Legitimate IT Department",
            audio: "/api/placeholder/audio/2",
            type: "legitimate",
            transcript: "Hi, this is John from IT. As per the email sent last week, we're doing scheduled maintenance tonight at 8 PM.",
            explanation: "References previous communication and provides specific details"
        },
        {
            title: "Bank Account Scam",
            audio: "/api/placeholder/audio/3",
            type: "malicious",
            transcript: "Your account has been charged $499. Press 1 immediately to dispute this transaction.",
            explanation: "Creating panic with unauthorized charges"
        }
    ];

    function selectMode(mode) {
        currentMode = mode;
        document.getElementById('initial-screen').classList.add('hidden');
        document.getElementById('game-elements').classList.remove('hidden');
        startGame();
    }

    function startGame() {
        gameStartTime = new Date();
        score = 0;
        timer = 30;
        questionsAnswered = 0;
        correctAnswers = 0;
        updateScore();
        startTimer();
        showNextScenario();
    }

    function showNextScenario() {
        const scenarios = currentMode === 'sms' ? smsScenarios : audioScenarios;
        currentScenario = scenarios[Math.floor(Math.random() * scenarios.length)];

        const messageBox = document.getElementById('message-box');
        if (currentMode === 'sms') {
            messageBox.innerHTML = `<div class="sms-message">${currentScenario.message}</div>`;
        } else {
            messageBox.innerHTML = `
                    <h3>${currentScenario.title}</h3>
                    <p>Transcript: "${currentScenario.transcript}"</p>
                    <audio controls class="audio-player">
                        <source src="${currentScenario.audio}" type="audio/mp3">
                        Your browser does not support the audio element.
                    </audio>
                `;
        }
    }

    function checkAnswer(answer) {
        questionsAnswered++;
        const isCorrect = (answer === 'malicious' && currentScenario.type === 'malicious') ||
            (answer === 'legitimate' && currentScenario.type === 'legitimate');

        if (isCorrect) {
            score += 10;
            correctAnswers++;
            updateScore();
        }

        // Show explanation
        const messageBox = document.getElementById('message-box');
        messageBox.innerHTML += `
                <div class="${isCorrect ? 'correct' : 'incorrect'}">
                    <p>${isCorrect ? 'Correct!' : 'Incorrect!'}</p>
                    <p>Explanation: ${currentScenario.explanation}</p>
                </div>
            `;

        // Show next scenario after brief delay
        setTimeout(showNextScenario, 2000);
    }

    function updateScore() {
        document.getElementById('score').textContent = score;
    }

    function startTimer() {
        clearInterval(timerInterval);
        timerInterval = setInterval(() => {
            timer--;
            document.getElementById('timer').textContent = timer;
            if (timer <= 0) {
                endGame();
            }
        }, 1000);
    }

    function endGame() {
        clearInterval(timerInterval);
        saveGameSession();
        document.getElementById('game-elements').classList.add('hidden');
        document.getElementById('results-screen').classList.remove('hidden');
        document.getElementById('final-score').textContent = `Final Score: ${score}`;
    }

    async function saveGameSession() {
        if (!gameStartTime) return;
        
        const timeSpent = Math.floor((new Date() - gameStartTime) / 1000);
        const accuracy = questionsAnswered > 0 ? (correctAnswers / questionsAnswered * 100) : 0;
        
        const gameData = {
            mode: currentMode,
            questionsAnswered: questionsAnswered,
            correctAnswers: correctAnswers,
            accuracy: accuracy
        };

        try {
            const response = await fetch('/training/save-session', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    gameType: 'socialEngineering',
                    score: score,
                    level: 1,
                    timeSpent: timeSpent,
                    completedChallenges: [`${currentMode}_completed`],
                    gameData: gameData
                })
            });

            if (response.status === 401) {
                alert('Please sign in to save your progress');
                window.location.href = '/auth/login';
                return;
            }

            const result = await response.json();
            if (result.success) {
                console.log('Game session saved successfully');
            }
        } catch (error) {
            console.error('Error saving game session:', error);
        }
    }

    function restartGame() {
        document.getElementById('results-screen').classList.add('hidden');
        document.getElementById('initial-screen').classList.remove('hidden');
        score = 0;
        timer = 30;
        updateScore();
    }
</script>

{{> footer}}