{{> header}}

<style>
    .leaderboard-main {
        max-width: 1200px;
        margin: 100px auto;
        padding: 2rem;
        background: #2a2a2a;
        border-radius: 18px;
        box-shadow: 0 6px 24px rgba(0, 0, 0, 0.25);
    }

    .leaderboard-tabs {
        display: flex;
        gap: 1rem;
        margin-bottom: 2rem;
        justify-content: center;
        flex-wrap: wrap;
    }

    .tab-button {
        background: #181818;
        border: 2px solid #00ff9d;
        color: #00ff9d;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 600;
    }

    .tab-button:hover,
    .tab-button.active {
        background: #00ff9d;
        color: #181818;
        transform: translateY(-2px);
    }

    .leaderboard-table {
        background: #222;
        border-radius: 12px;
        overflow: hidden;
        border: 2px solid #00ff9d;
        margin-bottom: 2rem;
    }

    .table-header {
        background: #00ff9d;
        color: #181818;
        padding: 1rem;
        display: grid;
        grid-template-columns: 60px 1fr 120px 120px 150px;
        gap: 1rem;
        font-weight: bold;
        align-items: center;
    }

    .table-row {
        padding: 1rem;
        display: grid;
        grid-template-columns: 60px 1fr 120px 120px 150px;
        gap: 1rem;
        border-bottom: 1px solid rgba(0, 255, 157, 0.2);
        color: #fff;
        align-items: center;
        transition: background 0.2s ease;
    }

    .table-row:hover {
        background: rgba(0, 255, 157, 0.1);
    }

    .table-row:last-child {
        border-bottom: none;
    }

    .rank {
        font-size: 1.2rem;
        font-weight: bold;
        text-align: center;
    }

    .rank.gold { color: #ffd700; }
    .rank.silver { color: #c0c0c0; }
    .rank.bronze { color: #cd7f32; }

    .player-name {
        font-weight: 600;
        color: #00ff9d;
    }

    .score {
        font-weight: bold;
        text-align: center;
    }

    .games-played {
        text-align: center;
        color: #ccc;
    }

    .last-played {
        text-align: center;
        color: #999;
        font-size: 0.9rem;
    }

    .no-data {
        text-align: center;
        padding: 3rem;
        color: #666;
        font-style: italic;
    }

    .user-stats {
        background: #222;
        border-radius: 12px;
        padding: 1.5rem;
        border: 2px solid #00ff9d;
        margin-bottom: 2rem;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
    }

    .stat-card {
        background: #181818;
        padding: 1rem;
        border-radius: 8px;
        text-align: center;
        border: 1px solid #00ff9d;
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: bold;
        color: #00ff9d;
    }

    .stat-label {
        color: #ccc;
        font-size: 0.9rem;
    }

    @media (max-width: 768px) {
        .table-header,
        .table-row {
            grid-template-columns: 50px 1fr 80px;
            gap: 0.5rem;
        }

        .games-played,
        .last-played {
            display: none;
        }

        .leaderboard-main {
            padding: 1rem;
            margin: 50px auto;
        }
    }
</style>

<main class="min-h-screen">
    <div class="leaderboard-main">
        <h1 class="text-4xl font-bold text-green-400 text-center mb-8">üèÜ Leaderboard</h1>

        {{#if user}}
        <div class="user-stats">
            <h2 class="text-2xl font-bold text-green-400 mb-4">Your Stats</h2>
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-value">{{userProgress.totalScore}}</div>
                    <div class="stat-label">Total Score</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">{{userProgress.gamesPlayed}}</div>
                    <div class="stat-label">Games Played</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">{{userProgress.highScores.cyberGame}}</div>
                    <div class="stat-label">Cyber Game Best</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">{{userProgress.highScores.socialEngineering}}</div>
                    <div class="stat-label">Social Engineering Best</div>
                </div>
            </div>
        </div>
        {{/if}}

        <div class="leaderboard-tabs">
            <button class="tab-button active" onclick="switchTab('overall')">Overall</button>
            <button class="tab-button" onclick="switchTab('cyberGame')">Cyber Defense</button>
            <button class="tab-button" onclick="switchTab('socialEngineering')">Social Engineering</button>
            <button class="tab-button" onclick="switchTab('penetration')">Penetration Testing</button>
            <button class="tab-button" onclick="switchTab('exploit')">Exploit Master</button>
            <button class="tab-button" onclick="switchTab('architecture')">Architecture</button>
        </div>

        <div class="leaderboard-table" id="leaderboard-content">
            <div class="table-header">
                <div>Rank</div>
                <div>Player</div>
                <div>Score</div>
                <div class="games-played">Games</div>
                <div class="last-played">Last Played</div>
            </div>
            <div class="no-data">Loading leaderboard...</div>
        </div>
    </div>
</main>

<script>
    let currentTab = 'overall';

    // Load initial leaderboard
    window.addEventListener('DOMContentLoaded', () => {
        loadLeaderboard('overall');
    });

    function switchTab(gameType) {
        // Update active tab
        document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
        event.target.classList.add('active');
        
        currentTab = gameType;
        loadLeaderboard(gameType);
    }

    async function loadLeaderboard(gameType) {
        try {
            const response = await fetch(`/training/leaderboard/${gameType}`);
            const data = await response.json();

            if (data.success) {
                renderLeaderboard(data.leaderboard, gameType);
            } else {
                showError('Failed to load leaderboard data');
            }
        } catch (error) {
            console.error('Error loading leaderboard:', error);
            showError('Error loading leaderboard');
        }
    }

    function renderLeaderboard(leaderboard, gameType) {
        const content = document.getElementById('leaderboard-content');
        
        if (!leaderboard || leaderboard.length === 0) {
            content.innerHTML = `
                <div class="table-header">
                    <div>Rank</div>
                    <div>Player</div>
                    <div>Score</div>
                    <div class="games-played">Games</div>
                    <div class="last-played">Last Played</div>
                </div>
                <div class="no-data">No players found for this category</div>
            `;
            return;
        }

        let html = `
            <div class="table-header">
                <div>Rank</div>
                <div>Player</div>
                <div>Score</div>
                <div class="games-played">Games</div>
                <div class="last-played">Last Played</div>
            </div>
        `;

        leaderboard.forEach((player, index) => {
            const rank = index + 1;
            const rankClass = rank === 1 ? 'gold' : rank === 2 ? 'silver' : rank === 3 ? 'bronze' : '';
            const score = gameType === 'overall' ? player.totalScore : player.highScores[gameType] || 0;
            const lastPlayed = new Date(player.lastPlayed).toLocaleDateString();

            html += `
                <div class="table-row">
                    <div class="rank ${rankClass}">${rank}</div>
                    <div class="player-name">${player.userName}</div>
                    <div class="score">${score.toLocaleString()}</div>
                    <div class="games-played">${player.gamesPlayed || 0}</div>
                    <div class="last-played">${lastPlayed}</div>
                </div>
            `;
        });

        content.innerHTML = html;
    }

    function showError(message) {
        const content = document.getElementById('leaderboard-content');
        content.innerHTML = `
            <div class="table-header">
                <div>Rank</div>
                <div>Player</div>
                <div>Score</div>
                <div class="games-played">Games</div>
                <div class="last-played">Last Played</div>
            </div>
            <div class="no-data" style="color: #ff4444;">${message}</div>
        `;
    }
</script>
{{> footer}}
