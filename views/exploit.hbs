{{> header}}
<style>
    /* styles.css */
    body {
        margin: 0;
        font-family: 'Courier New', Courier, monospace;
        color: #00ff9d;
    }

    #game-container {
        text-align: center;
        margin: 0;
    }

    header h1 {
        margin: 0;
        padding: 10px;
        background: #00ff9d;
        color: #111;
        font-size: 2.5em;
    }

    #level-selection {
        margin-top: 30px;
    }

    .level-btn {
        background-color: #00ff9d;
        color: #111;
        border: none;
        padding: 15px 30px;
        margin: 10px;
        font-size: 20px;
        cursor: pointer;
        transition: 0.3s ease-in-out;
    }

    .level-btn:hover {
        background-color: #00ff9d;
    }

    #game-area {
        display: none;
        margin-top: 30px;
    }

    #mission-brief {
        background: #222;
        padding: 15px;
        border-radius: 5px;
        margin-bottom: 20px;
    }

    #terminal-output {
        background: #000;
        padding: 20px;
        border-radius: 5px;
        margin-bottom: 20px;
        height: 200px;
        overflow-y: scroll;
        text-align: left;
    }

    #tools-container {
        background: #222;
        padding: 20px;
        border-radius: 5px;
    }

    footer {
        margin-top: 30px;
        color: #666;
    }
</style>
<main>
    <div id="game-container">
        <header>
            <h1>Exploit Master</h1>
        </header>
        <section id="level-selection">
            <h2>Select a Level</h2>
            <button class="level-btn" id="beginner-btn">Beginner</button>
            <button class="level-btn" id="intermediate-btn">Intermediate</button>
            <button class="level-btn" id="advanced-btn">Advanced</button>
        </section>

        <section id="game-area">
            <div id="mission-brief">
                <!-- Mission details based on selected level -->
            </div>
            <div id="terminal-output">
                <!-- Output or responses based on player's actions -->
            </div>
            <div id="tools-container">
                <!-- Interaction tools, like inputs and buttons, go here -->
            </div>
        </section>

        <footer>
            <p>Exploit Master - Learn Ethical Hacking</p>
        </footer>
    </div>

    <script>
        // game.js
        document.addEventListener('DOMContentLoaded', () => {
            const beginnerBtn = document.getElementById('beginner-btn');
            const intermediateBtn = document.getElementById('intermediate-btn');
            const advancedBtn = document.getElementById('advanced-btn');
            const missionBrief = document.getElementById('mission-brief');
            const gameArea = document.getElementById('game-area');
            const toolsContainer = document.getElementById('tools-container');
            const terminalOutput = document.getElementById('terminal-output');

            beginnerBtn.addEventListener('click', () => loadLevel('beginner'));
            intermediateBtn.addEventListener('click', () => loadLevel('intermediate'));
            advancedBtn.addEventListener('click', () => loadLevel('advanced'));

            function loadLevel(level) {
                gameArea.style.display = 'block';
                toolsContainer.innerHTML = '';
                terminalOutput.innerHTML = '';

                switch (level) {
                    case 'beginner':
                        loadBeginnerLevel();
                        break;
                    case 'intermediate':
                        loadIntermediateLevel();
                        break;
                    case 'advanced':
                        loadAdvancedLevel();
                        break;
                }
            }

            function loadBeginnerLevel() {
                missionBrief.innerHTML = `
      <h2>Beginner Level: SQL Injection</h2>
      <p>Your task: Perform SQL injection on a vulnerable login form.</p>
    `;
                renderSQLInjectionTool();
            }

            function loadIntermediateLevel() {
                missionBrief.innerHTML = `
      <h2>Intermediate Level: Buffer Overflow</h2>
      <p>Your task: Exploit a buffer overflow vulnerability to gain unauthorized access.</p>
    `;
                renderBufferOverflowTool();
            }

            function loadAdvancedLevel() {
                missionBrief.innerHTML = `
      <h2>Advanced Level: Privilege Escalation</h2>
      <p>Your task: Escalate privileges on a compromised system using kernel exploits.</p>
    `;
                renderPrivilegeEscalationTool();
            }

            function renderSQLInjectionTool() {
                toolsContainer.innerHTML = `
      <p>Enter SQL Payload:</p>
      <input type="text" id="sql-input" placeholder="e.g., ' OR '1'='1">
      <button id="run-sql">Execute</button>
    `;
                document.getElementById('run-sql').addEventListener('click', () => {
                    const input = document.getElementById('sql-input').value;
                    if (input.includes("' OR '1'='1")) {
                        terminalOutput.innerHTML += '<p>Login bypass successful!</p>';
                    } else {
                        terminalOutput.innerHTML += '<p>SQL Injection failed. Try again.</p>';
                    }
                });
            }

            function renderBufferOverflowTool() {
                toolsContainer.innerHTML = `
      <p>Input Overflow Buffer Size:</p>
      <input type="number" id="buffer-input" placeholder="e.g., 512">
      <button id="run-buffer">Execute Overflow</button>
    `;
                document.getElementById('run-buffer').addEventListener('click', () => {
                    const bufferSize = parseInt(document.getElementById('buffer-input').value);
                    if (bufferSize > 128) {
                        terminalOutput.innerHTML += '<p>Buffer overflow successful! Memory compromised.</p>';
                    } else {
                        terminalOutput.innerHTML += '<p>Overflow too small. Try again.</p>';
                    }
                });
            }

            function renderPrivilegeEscalationTool() {
                toolsContainer.innerHTML = `
      <p>Select Exploit Method:</p>
      <button id="kernel-exploit">Kernel Exploit</button>
      <button id="password-exploit">Weak Password Exploit</button>
    `;
                document.getElementById('kernel-exploit').addEventListener('click', () => {
                    terminalOutput.innerHTML += '<p>Kernel exploit successful! Privileges escalated to root.</p>';
                });
                document.getElementById('password-exploit').addEventListener('click', () => {
                    terminalOutput.innerHTML += '<p>Weak password exploit successful! Admin rights obtained.</p>';
                });
            }
        });
    </script>
</main>
{{> footer}}